{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\n/* eslint-disable import/no-internal-modules */\nimport './utils/env';\nimport { App, LogLevel } from '@slack/bolt';\n\nimport { messageForm } from './utils/form';\nimport { receiveMessageFromDb, sendMessageToDb } from './utils/mqFunctions';\nimport { formatOrder } from './utils/formatFunctions';\n\nconst app = new App({\n  token: process.env.SLACK_BOT_TOKEN,\n  signingSecret: process.env.SLACK_SIGNING_SECRET,\n  socketMode: true,\n  appToken: process.env.SLACK_APP_TOKEN,\n  port: process.env.PORT || 3000,\n  logLevel: LogLevel.DEBUG,\n});\n\napp.use(async ({ next }) => {\n  await next();\n});\n\n// Listens to incoming messages that contain \"hello\"\napp.message('pizza', async ({ message, say }) => {\n  // Filter out message events with subtypes (see https://api.slack.com/events/message)\n  if (message.subtype === undefined || message.subtype === 'bot_message') {\n    // say() sends a message to the channel where the event was triggered\n    await say({\n      blocks: messageForm,\n      text: `Hey there <@${message.user}>!`,\n    });\n  }\n});\n\napp.action('pizza_order-action', async ({ body, ack, say }) => {\n  // Acknowledge the action\n  await ack();\n\n  const formatedOrder = formatOrder(body);\n  sendMessageToDb(formatedOrder);\n  await say(`<@${body.user.id}> \u0437\u0430\u043A\u0430\u0437 \u043F\u0440\u0438\u043D\u044F\u0442, \u0441\u043B\u0435\u0434\u0438\u0442\u0435 \u0437\u0430 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\u043C \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0437\u0430\u043A\u0430\u0437\u0430...`);\n});\n\n(async () => {\n  // Start your app\n  await app.start(Number(process.env.PORT) || 3000);\n  receiveMessageFromDb(app);\n\n  console.log('\u26A1\uFE0F Bolt app is running!');\n})();"],
  "mappings": ";AAEA,iBAAO;AACP,kBAA8B;AAE9B,kBAA4B;AAC5B,yBAAsD;AACtD,6BAA4B;AAE5B,MAAM,MAAM,IAAI,gBAAI;AAAA,EAClB,OAAO,QAAQ,IAAI;AAAA,EACnB,eAAe,QAAQ,IAAI;AAAA,EAC3B,YAAY;AAAA,EACZ,UAAU,QAAQ,IAAI;AAAA,EACtB,MAAM,QAAQ,IAAI,QAAQ;AAAA,EAC1B,UAAU,qBAAS;AACrB,CAAC;AAED,IAAI,IAAI,OAAO,EAAE,KAAK,MAAM;AAC1B,QAAM,KAAK;AACb,CAAC;AAGD,IAAI,QAAQ,SAAS,OAAO,EAAE,SAAS,IAAI,MAAM;AAE/C,MAAI,QAAQ,YAAY,UAAa,QAAQ,YAAY,eAAe;AAEtE,UAAM,IAAI;AAAA,MACR,QAAQ;AAAA,MACR,MAAM,eAAe,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACH;AACF,CAAC;AAED,IAAI,OAAO,sBAAsB,OAAO,EAAE,MAAM,KAAK,IAAI,MAAM;AAE7D,QAAM,IAAI;AAEV,QAAM,oBAAgB,oCAAY,IAAI;AACtC,0CAAgB,aAAa;AAC7B,QAAM,IAAI,KAAK,KAAK,KAAK,kRAA2D;AACtF,CAAC;AAAA,CAEA,YAAY;AAEX,QAAM,IAAI,MAAM,OAAO,QAAQ,IAAI,IAAI,KAAK,GAAI;AAChD,+CAAqB,GAAG;AAExB,UAAQ,IAAI,mCAAyB;AACvC,GAAG;",
  "names": []
}
